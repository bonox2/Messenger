{"ast":null,"code":"import { setDoc, doc, collection, addDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nexport function useDB() {\n  async function setDocument(collectionName, data, id) {\n    try {\n      let ref = null;\n\n      if (id) {\n        ref = await setDoc(doc(db, collectionName, id), data);\n      } else {\n        ref = await addDoc(collection(db, collectionName), data);\n      }\n\n      console.log('setDocument success >>>', ref);\n      return Promise.resolve(ref);\n    } catch (error) {\n      console.warn('setDocument error >>>', error);\n      return Promise.reject(error);\n    }\n  }\n\n  return {\n    setDocument\n  };\n\n  async function getDocument(collectionName, data, id) {\n    const docRef = doc(db, \"cities\", \"SF\");\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log(\"Document data:\", docSnap.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }\n\n  return {\n    getDocument\n  };\n}","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/Messenger/src/hooks/useDB.js"],"names":["setDoc","doc","collection","addDoc","db","useDB","setDocument","collectionName","data","id","ref","console","log","Promise","resolve","error","warn","reject","getDocument","docRef","docSnap","getDoc","exists"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,oBAAhD;AACA,SAASC,EAAT,QAAmB,aAAnB;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB,iBAAeC,WAAf,CAA2BC,cAA3B,EAA2CC,IAA3C,EAAiDC,EAAjD,EAAqD;AACnD,QAAI;AACF,UAAIC,GAAG,GAAG,IAAV;;AACA,UAAID,EAAJ,EAAQ;AACNC,QAAAA,GAAG,GAAG,MAAMV,MAAM,CAACC,GAAG,CAACG,EAAD,EAAKG,cAAL,EAAqBE,EAArB,CAAJ,EAA8BD,IAA9B,CAAlB;AACD,OAFD,MAEO;AACLE,QAAAA,GAAG,GAAG,MAAMP,MAAM,CAACD,UAAU,CAACE,EAAD,EAAKG,cAAL,CAAX,EAAiCC,IAAjC,CAAlB;AACD;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACA,aAAOG,OAAO,CAACC,OAAR,CAAgBJ,GAAhB,CAAP;AACD,KATD,CASE,OAAOK,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACK,IAAR,CAAa,uBAAb,EAAsCD,KAAtC;AACA,aAAOF,OAAO,CAACI,MAAR,CAAeF,KAAf,CAAP;AACD;AACF;;AAED,SAAO;AAAET,IAAAA;AAAF,GAAP;;AACA,iBAAeY,WAAf,CAA2BX,cAA3B,EAA2CC,IAA3C,EAAiDC,EAAjD,EAAqD;AACnD,UAAMU,MAAM,GAAGlB,GAAG,CAACG,EAAD,EAAK,QAAL,EAAe,IAAf,CAAlB;AACE,UAAMgB,OAAO,GAAG,MAAMC,MAAM,CAACF,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACE,MAAR,EAAJ,EAAsB;AACpBX,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,OAAO,CAACZ,IAAR,EAA9B;AACD,KAFD,MAEO;AACL;AACFG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACC;AACA;;AAEL,SAAO;AAAEM,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import { setDoc, doc, collection, addDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nexport function useDB() {\r\n  async function setDocument(collectionName, data, id) {\r\n    try {\r\n      let ref = null;\r\n      if (id) {\r\n        ref = await setDoc(doc(db, collectionName, id), data);\r\n      } else {\r\n        ref = await addDoc(collection(db, collectionName), data);\r\n      }\r\n      console.log('setDocument success >>>', ref);\r\n      return Promise.resolve(ref);\r\n    } catch (error) {\r\n      console.warn('setDocument error >>>', error);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  return { setDocument };\r\n  async function getDocument(collectionName, data, id) {\r\n    const docRef = doc(db, \"cities\", \"SF\");\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        console.log(\"Document data:\", docSnap.data());\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n      console.log(\"No such document!\");\r\n      }\r\n      }\r\n\r\n  return { getDocument };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}