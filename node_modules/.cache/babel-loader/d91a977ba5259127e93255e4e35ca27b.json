{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\Messenger\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useAuth } from './hooks/useAuth';\nimport LoginForm from './components/LoginForm';\nimport Header from './components/Header';\nimport Contacts from './components/Contacts-main';\nimport Chat from './components/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    user,\n    loading\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"container\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"interface\",\n          children: [/*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), !user && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nconst refreshBtnEl = document.getElementById('refreshBtn');\nconst searchFormEl = document.getElementById('searchForm');\nsearchFormEl.addEventListener('submit', function (event) {\n  event.preventDefault();\n  let query = event.target.search.value.toLowerCase().trim().split(' ');\n  const fieldsForSearch = ['phone', 'name', 'text'];\n  const filteredMessages = messages.filter(messages => {\n    return query.every(word => {\n      return fieldsForSearch.some(field => {\n        return `${messages[field]}`.toLowerCase().includes(word);\n      });\n    });\n  });\n  event.target.reset();\n  addMessages(listEl, filteredMessages);\n});\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/Messenger/src/App.js"],"names":["useAuth","LoginForm","Header","Contacts","Chat","App","user","loading","refreshBtnEl","document","getElementById","searchFormEl","addEventListener","event","preventDefault","query","target","search","value","toLowerCase","trim","split","fieldsForSearch","filteredMessages","messages","filter","every","word","some","field","includes","reset","addMessages","listEl"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,OAAO,EAAjC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGM,IAAI,iBACL;AAAA,+BACE;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,EAcG,CAACA,IAAD,iBACC;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5BQD,G;UACmBL,O;;;KADnBK,G;AA6BT,MAAMG,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAArB;AACA,MAAMC,YAAY,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAArB;AACAC,YAAY,CAACC,gBAAb,CAA8B,QAA9B,EAAwC,UAAUC,KAAV,EAAiB;AACvDA,EAAAA,KAAK,CAACC,cAAN;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoBC,KAApB,CAA0BC,WAA1B,GAAwCC,IAAxC,GAA+CC,KAA/C,CAAqD,GAArD,CAAZ;AACA,QAAMC,eAAe,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAAxB;AACA,QAAMC,gBAAgB,GAAGC,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,IAAI;AACjD,WAAOT,KAAK,CAACW,KAAN,CAAYC,IAAI,IAAI;AACvB,aAAOL,eAAe,CAACM,IAAhB,CAAqBC,KAAK,IAAI;AACjC,eAAQ,GAAEL,QAAQ,CAACK,KAAD,CAAQ,EAAnB,CAAqBV,WAArB,GAAmCW,QAAnC,CAA4CH,IAA5C,CAAP;AACH,OAFM,CAAP;AAGH,KAJM,CAAP;AAKH,GANwB,CAAzB;AAOAd,EAAAA,KAAK,CAACG,MAAN,CAAae,KAAb;AACAC,EAAAA,WAAW,CAACC,MAAD,EAASV,gBAAT,CAAX;AAED,CAdD;AAeA,eAAelB,GAAf","sourcesContent":["import './App.css';\nimport { useAuth } from './hooks/useAuth';\nimport LoginForm from './components/LoginForm';\nimport Header from './components/Header';\nimport Contacts from './components/Contacts-main';\nimport Chat from './components/Chat';\n\n\nfunction App() {\n  const { user, loading } = useAuth();\n\n  \n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <Header></Header>\n        {user && \n        <container>\n          <section className='interface'>\n            <Contacts></Contacts>\n            <Chat></Chat>\n          </section>\n        </container>\n        }\n        \n\n\n\n        {!user && (\n          <section className=\"forms\">\n            <LoginForm />\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\nconst refreshBtnEl = document.getElementById('refreshBtn')\nconst searchFormEl = document.getElementById('searchForm')\nsearchFormEl.addEventListener('submit', function (event) {\n  event.preventDefault()\n  let query = event.target.search.value.toLowerCase().trim().split(' ')\n  const fieldsForSearch = ['phone', 'name', 'text']\n  const filteredMessages = messages.filter(messages => {\n      return query.every(word => {\n          return fieldsForSearch.some(field => {\n              return `${messages[field]}`.toLowerCase().includes(word)\n          })\n      })\n  })\n  event.target.reset()\n  addMessages(listEl, filteredMessages)\n  \n})\nexport default App;\n"]},"metadata":{},"sourceType":"module"}